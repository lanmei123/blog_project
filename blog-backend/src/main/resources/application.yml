server:
  port: 8088
spring:
  profiles:
    active: "@profiles.active@"
#  security:
#    jwt:
#      key: jwt-key
#      # jwt 的有效时间（天）
#      expire: 7
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://[数据库IP]:[数据库端口]/blog?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Hong_Kong
#    username: root
#    password: [数据库密码]
#  data:
#    redis:
#      # redis 端口
#      port: 6379
#      # redis 地址
#      host:
#      # redis 密码
#      password:
#      # redis连接超时时间（毫秒）
#      timeout: 10000
#      # 数据库索引，默认为0
#      database: 1
#  jackson:
#    date-format: yyyy-MM-dd HH:mm:ss
#    time-zone: GMT+8
#  rabbitmq:
#    # rabbitmq 地址
#    host:
#    # rabbitmq 端口
#    port: 5672
#    # rabbitmq 用户名
#    username:
#    # rabbitmq 密码
#    password:
#    listener:
#      simple:
#        retry:
#          enabled: true #是否开启消费者重试
#          max-attempts: 3 #最大重试次数
#          initial-interval: 6000 #重试间隔时间（单位毫秒）
#          multiplier: 2 #间隔时间乘子，间隔时间*乘子=下一次的间隔时间，最大不能超过设置的最大间隔时间
#          max-interval: 10000 #重试最大时间间隔（单位毫秒）
#    # 邮箱队列名称
#    queue:
#      email: email_queue
#      log-login: log_login_queue
#      log-system: log_system_queue
#    # 邮箱交换机名称
#    exchange:
#      email: email_exchange
#      log: log_exchange
#    # 邮箱路由键
#    routingKey:
#      email: email_routing_key
#      log-login: log_routing_key_login
#      log-system: log_routing_key_system
#  mail:
#    host: smtp.qq.com
#    username:  # 不可透露，邮件发送账号
#    password:  # 不可透露，邮件发送账号密钥
#    properties:
#      mail:
#        smtp:
#          auth: true
#          starttls:
#            enable: true
#  servlet:
#    multipart:
#      max-file-size: 10MB
#      max-request-size: 10MB
#  quartz:
#    # 将 Quartz 持久化方式修改为 jdbc
#    job-store-type: jdbc
#    properties:
#      org:
#        quartz:
#          scheduler:
#            # 实例节点 ID 自动生成
#            instanceId: AUTO
#          jobStore:
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX
#            dataSource: quartz_jobs
#          dataSource:
#            quartz_jobs:
#              driver: com.mysql.cj.jdbc.Driver
#              URL: jdbc:mysql://[数据库IP]:[数据库端口]/blog?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Hong_Kong
#              user: root
#              password: [数据库密码]
#mail:
#  link:
#    apply:
#      # 邮箱审核友链回调地址（如果不开启）apply-notice 则无需在意该配置，随便填写即可
#      redirect-uri: http://[后端地址:端口/域名]/link/email/apply
#  # 是否开启文章邮箱评论提醒
#  article-email-notice: true
#  # 是否开启文章邮箱回复提醒
#  article-reply-notice: false
#  # 是否开启留言邮箱评论提醒
#  message-email-notice: false
#  # 是否开启新的留言提醒
#  message-new-notice: true
#  # 是否开启留言回复提醒
#  message-reply-notice: true
#  # 是否开启友链申请提醒（可以在邮箱中通过友链）
#  apply-notice: true
#  # 是否开启友链审核通知提醒对方
#  pass-notice: true
#mybatis:
#  mapper-locations: classpath:mapper/*.xml
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#  global-config:
#    db-config:
#      # 逻辑删除
#      logic-delete-field: isDeleted
#      # 逻辑删除值
#      logic-delete-value: 1
#      # 逻辑未删除值
#      logic-not-delete-value: 0
#      # id 自增
#      id-type: auto
## springdoc-openapi项目配置，访问 http://127.0.0.1:8088/doc.html
#springdoc:
#  swagger-ui:
#    path: /swagger-ui.html
#    tags-sorter: alpha
#    operations-sorter: alpha
#  api-docs:
#    path: /v3/api-docs
#  group-configs:
#    - group: 'default'
#      paths-to-match: '/**'
#      packages-to-scan: xyz.kuailemao
#oauth:
#  # gitee 登录
#  gitee:
#    client-id:
#    client-secret:
#    redirect-uri:
#  # gitub 登录
#  github:
#    client-id:
#    client-secret:
#    redirect-uri:
#web:
#  index:
#    # 网站前端首页
#    path: http://kuailemao.xyz/
## knife4j的增强配置，不需要增强可以不配
#knife4j:
#  enable: true
#  setting:
#    language: zh_cn
#http_pool:
#  max_total: 200
#  default_max_per_route: 100
#  connect_timeout: 5000
#  connection_request_timeout: 1000
#  socket_timeout: 65000
#  validate_after_inactivity: 2000
## 连接 minio
#minio:
#  endpoint:
#  accessKey:
#  secretKey:
#  bucketName: